#define pi 3.14159
#define thc(a,b) tanh(a*cos(b))/tanh(a)

float sdBox( in vec2 p, in vec2 b ) {
    vec2 d = abs(p)-b;
    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);
}

float fn(float t, float a) {
    float f = 2. * abs(fract(t) - 0.5);
    return (clamp(f, 1. - a, a) + a - 1.) / (2. * a - 1.);
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;    
    uv *= 2.;
    
    // Width of squares
    float a = 0.25 + 0.125 * thc(2., -iTime);
    
    // Alters trajectory of square
    float h = 0.675 + 0.075 * thc(2., -iTime);
    
    // Trajectory of square
    float t = 0.25 * iTime;
    vec2 p = vec2(fn(t, h), fn(t + 0.25, h))-0.5;
    
    //Draw squares
    float k = 2. / iResolution.y;
    float s = smoothstep(-k, k, 0.02 - abs(-sdBox(uv - p,   vec2(0.8 * a)) + 0.2 * a));
         s += smoothstep(-k, k, 0.02 - abs(-sdBox(uv, 0.8 * vec2(0.5 - a)) + 0.2 * (0.5 - a)));
    
    vec3 col = vec3(s) + 0.2;
    
    fragColor = vec4(col,1.0);
}